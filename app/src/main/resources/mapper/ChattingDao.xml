<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="bitcamp.carrot_thunder.chatting.model.dao.ChattingDAO">

  <!-- Result Maps -->
  <resultMap type="bitcamp.carrot_thunder.chatting.model.vo.ChatRoomVO" id="ChatRoomMap">
    <id     column="room_id"           property="roomId"/>
    <result column="tbl_article_id"    property="postId"/>
    <result column="seller_id"         property="sellerId"/>
    <result column="buyer_id"          property="buyerId"/>
    <result column="last_message"      property="lastMessage"/>
    <result column="last_updated"      property="lastUpdated"/>
    <result column="seller_nickname"   property="sellerNickname"/>
    <result column="buyer_nickname"    property="buyerNickname"/>
  </resultMap>

  <resultMap type="bitcamp.carrot_thunder.chatting.model.vo.ChatMessageVO" id="ChatMessageMap">
    <id     column="message_id" property="messageId"/>
    <result column="room_id"    property="roomId"/>
    <result column="sender_id"  property="senderId"/>
    <result column="content"    property="content"/>
    <result column="sent_at"    property="sentAt"/>
    <result column="is_read"    property="isRead"/>
  </resultMap>

  <resultMap id="ChatRoomDetailMap" type="bitcamp.carrot_thunder.chatting.model.vo.ChatRoomVO">
    <result column="roomId"         property="roomId"/>
    <result column="tbl_article_id" property="postId"/>
    <result column="sellerId"       property="sellerId"/>
    <result column="buyerId"        property="buyerId"/>
    <result column="lastMessage"    property="lastMessage"/>
    <result column="lastUpdated"    property="lastUpdated"/>
    <result column="sellerNickname" property="sellerNickname"/>
    <result column="buyerNickname"  property="buyerNickname"/>
    <result column="postTitle"      property="postTitle"/>
  </resultMap>

  <resultMap id="ChatRoomWithAttachmentMap" type="bitcamp.carrot_thunder.chatting.model.vo.ChatRoomVO">
    <result column="roomId"         property="roomId"/>
    <result column="tbl_article_id" property="postId"/>
    <result column="sellerId"       property="sellerId"/>
    <result column="buyerId"        property="buyerId"/>
    <result column="lastMessage"    property="lastMessage"/>
    <result column="lastUpdated"    property="lastUpdated"/>
    <result column="sellerNickname" property="sellerNickname"/>
    <result column="buyerNickname"  property="buyerNickname"/>
    <result column="postTitle"      property="postTitle"/>
    <result column="postAttachment" property="postAttachment"/>
  </resultMap>

  <select id="getChatRoomByPostIdAndUserId" resultMap="ChatRoomMap">
    SELECT
    cr.*,
    m1.nickname AS seller_nickname,
    m2.nickname AS buyer_nickname
    FROM
    tbl_chat_room cr
    JOIN
    tbl_user m1 ON cr.seller_id = m1.id
    JOIN
    tbl_user m2 ON cr.buyer_id = m2.id
    WHERE
    tbl_article_id = #{postId} AND (seller_id = #{currentUserId} OR buyer_id = #{currentUserId})
    LIMIT 1
  </select>

  <select id="getMessagesByRoomId" resultMap="ChatMessageMap">
    SELECT * FROM tbl_chat_message WHERE room_id = #{roomId} ORDER BY sent_at ASC
  </select>

  <insert id="saveMessage">
    INSERT INTO tbl_chat_message (room_id, sender_id, content, sent_at, is_read)
    VALUES (#{roomId}, #{senderId}, #{content}, now(), #{isRead})
  </insert>

  <select id="getChatRoomsForSeller" resultMap="ChatRoomDetailMap">
    SELECT
    cr.room_id AS roomId,
    cr.tbl_article_id AS postId,
    cr.seller_id AS sellerId,
    cr.buyer_id AS buyerId,
    cr.last_message AS lastMessage,
    cr.last_updated AS lastUpdated,
    m1.nickname AS sellerNickname,
    m2.nickname AS buyerNickname,
    a.title AS postTitle
    FROM
    tbl_chat_room cr
    JOIN
    tbl_article a ON cr.tbl_article_id = a.id
    JOIN
    tbl_user m1 ON cr.seller_id = m1.id
    JOIN
    tbl_user m2 ON cr.buyer_id = m2.id
    WHERE
    cr.seller_id = #{sellerId}
  </select>

  <select id="getChatRoomsForMember" resultMap="ChatRoomWithAttachmentMap">
    SELECT
    cr.room_id AS roomId,
    cr.tbl_article_id AS postId,
    cr.seller_id AS sellerId,
    cr.buyer_id AS buyerId,
    cr.last_message AS lastMessage,
    cr.last_updated AS lastUpdated,
    m1.nickname AS sellerNickname,
    m2.nickname AS buyerNickname,
    a.title AS postTitle,
    f.filepath AS postAttachment
    FROM
    tbl_chat_room cr
    JOIN
    tbl_article a ON cr.tbl_article_id = a.id
    JOIN
    tbl_user m1 ON cr.seller_id = m1.id
    JOIN
    tbl_user m2 ON cr.buyer_id = m2.id
    LEFT JOIN (
    SELECT tbl_article_id, MIN(filepath) as filepath
    FROM post_attachment
    GROUP BY tbl_article_id
    ) f ON cr.tbl_article_id = f.tbl_article_id
    WHERE
    cr.seller_id = #{memberId} OR cr.buyer_id = #{memberId}
  </select>

  <select id="checkChatRoomExists" resultType="String">
    SELECT room_id FROM tbl_chat_room WHERE seller_id = #{sellerId} AND buyer_id = #{currentUserId} AND tbl_article_id = #{postId}
  </select>

  <insert id="createChatRoom">
    INSERT INTO tbl_chat_room (room_id, tbl_article_id, seller_id, buyer_id)
    VALUES (#{roomId}, #{postId}, #{sellerId}, #{currentUserId})
  </insert>

  <select id="getChatRoomByRoomId" resultMap="ChatRoomMap">
    SELECT * FROM tbl_chat_room WHERE room_id = #{roomId}
  </select>

</mapper>
